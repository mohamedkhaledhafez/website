(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=s(n),b=r,d=m["".concat(i,".").concat(b)]||m[b]||p[b]||a;return n?o.a.createElement(d,c(c({ref:t},l),{},{components:n})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return s}));var r=n(2),o=n(6),a=(n(0),n(106)),i={id:"two-sum",title:"Two Sum"},c={unversionedId:"two-sum",id:"two-sum",isDocsHomePage:!1,title:"Two Sum",description:"Problem",source:"@site/docs/1.two-sum.md",slug:"/two-sum",permalink:"/docs/two-sum",editUrl:"https://github.com/techfellows/website/edit/master/website/docs/docs/1.two-sum.md",version:"current",sidebar:"algorithmsAndDataStructuresSidebar",previous:{title:"Validate Subsequence",permalink:"/docs/ValidateSubsequence"},next:{title:"Add Two Numbers",permalink:"/docs/add-two-numbers"}},u=[{value:"Problem",id:"problem",children:[]},{value:"Problem Description",id:"problem-description",children:[]},{value:"Solution",id:"solution",children:[]},{value:"Key Points",id:"key-points",children:[]},{value:"Code",id:"code",children:[]}],l={rightToc:u};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"problem"},"Problem"),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://leetcode-cn.com/problems/two-sum"}),"https://leetcode-cn.com/problems/two-sum")),Object(a.b)("h2",{id:"problem-description"},"Problem Description"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"Given an array of integers, return indices of the two numbers such that they add up to a specific target.\n\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\n\nExample:\n\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[0] + nums[1] = 2 + 7 = 9,\nreturn [0, 1].\n")),Object(a.b)("h2",{id:"solution"},"Solution"),Object(a.b)("p",null,"The easiest solution to come up with is Brute Force. We could write two for-loops to traverse every element, and find the target numbers that meet the requirement. However, the time complexity of this solution is O(N^2), while the space complexity is O(1). Apparently, we need to find a way to optimize this solution since the time complexity is too high. What we could do is to record the numbers we have traversed and the relevant index with a Map. Whenever we meet a new number during traversal, we go back to the Map and check whether the ",Object(a.b)("inlineCode",{parentName:"p"},"diff")," between this number and the target number appeared before. If it did, the problem has been solved and there's no need to continue."),Object(a.b)("h2",{id:"key-points"},"Key Points"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Find the difference instead of the sum"),Object(a.b)("li",{parentName:"ul"},"Connect every number with its index through the help of Map"),Object(a.b)("li",{parentName:"ul"},"Less time by more space. Reduce the time complexity from O(N) to O(1)")),Object(a.b)("h2",{id:"code"},"Code"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Support Language: JS")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nconst twoSum = function (nums, target) {\n  const map = new Map();\n  for (let i = 0; i < nums.length; i++) {\n    const diff = target - nums[i];\n    if (map.has(diff)) {\n      return [map.get(diff), i];\n    }\n    map.set(nums[i], i);\n  }\n};\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("em",{parentName:"strong"},"Complexity Anlysis"))),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("em",{parentName:"li"},"Time Complexity"),": O(N)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("em",{parentName:"li"},"Space Complexity"),"\uff1aO(N)")))}s.isMDXComponent=!0}}]);